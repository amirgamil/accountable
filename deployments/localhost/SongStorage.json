{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bpm",
          "type": "uint256"
        }
      ],
      "name": "NewSongCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "SongDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "SongEdited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "SongMinted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "newNotes",
          "type": "bytes32[]"
        }
      ],
      "name": "addNotes",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "bpm",
          "type": "uint256"
        }
      ],
      "name": "createNewSong",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "bpm",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "newNotes",
          "type": "bytes32[]"
        }
      ],
      "name": "createNewSongWithNotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "deleteSong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSongs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isMinted",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isDeleted",
              "type": "bool"
            },
            {
              "internalType": "bytes32[]",
              "name": "notes",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint32",
              "name": "id",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "bpm",
              "type": "uint32"
            }
          ],
          "internalType": "struct SharedDataStructures.Song[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberOfSongs",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getSongFromId",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "mintSong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "songOwnerCount",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "songToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "songs",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isMinted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isDeleted",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "id",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "bpm",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x0796bbd39ddf75bb0cc6e10f82cb82da331f91faaa96e313bf14deaa854dd077",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1650052",
    "logsBloom": "0x
    "blockHash": "0xb8eca4d4c068a470b337fea67ccf19aa4f36c767a8af3f10362b23c078ace45d",
    "transactionHash": "0x0796bbd39ddf75bb0cc6e10f82cb82da331f91faaa96e313bf14deaa854dd077",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1650052",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "441bd88f6113a3c11316c26be3230a01",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bpm\",\"type\":\"uint256\"}],\"name\":\"NewSongCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"SongDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"SongEdited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"SongMinted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"newNotes\",\"type\":\"bytes32[]\"}],\"name\":\"addNotes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"bpm\",\"type\":\"uint256\"}],\"name\":\"createNewSong\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"bpm\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"newNotes\",\"type\":\"bytes32[]\"}],\"name\":\"createNewSongWithNotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"deleteSong\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSongs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isMinted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"},{\"internalType\":\"bytes32[]\",\"name\":\"notes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"bpm\",\"type\":\"uint32\"}],\"internalType\":\"struct SharedDataStructures.Song[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfSongs\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getSongFromId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"mintSong\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"songOwnerCount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"songToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"songs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isMinted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"bpm\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SongStorage.sol\":\"SongStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SharedDataStructures.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.10;\\n\\nlibrary SharedDataStructures {\\n    struct Song {\\n        string name;\\n        //@notice, a song that has been minted into an NFT and stored on the Permaweb\\n        //can no longer be added to it.\\n        bool isMinted;\\n        //@notice we keep a record of whether a song has been deleted or not\\n        //to avoid to having to make an expensive write to adjust ids of existing songs.\\n        //Instead, we set this boolean variable and delete notes.\\n        //Any interaction with this song checks that this is not deleted\\n        bool isDeleted;\\n        //@notice array of characters that compromise the notes of the song. These\\n        //get directly synthesized in the client by mapping them to actual notes.\\n        //We uses bytes32 since each character in a song is of a fixed size, and\\n        //this is more gas-optimized/cheaper\\n        bytes32[] notes;\\n        //@notice we use uint32 for struct packing\\n        uint32 id;\\n        uint32 bpm;\\n    }\\n}\",\"keccak256\":\"0x9f037695579ed9bb61468f8bd028c183b4a110b958179a877c7a4a7711548a3d\",\"license\":\"MIT\"},\"contracts/SongStorage.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.10;\\n\\nimport \\\"./SharedDataStructures.sol\\\";\\n\\ncontract SongStorage {\\n    SharedDataStructures.Song[] public songs;\\n    mapping (uint => address) public songToOwner; \\n    mapping (address => int) public songOwnerCount; \\n\\n    //@notice event for when a new song is made\\n    event NewSongCreated (string name, uint id, uint bpm);\\n    event SongEdited (string name, uint id);\\n    event SongDeleted(string name, uint id);\\n    event SongMinted(string name, uint id);\\n\\n    function getAllSongs() view public returns (SharedDataStructures.Song[] memory) {\\n        return songs;\\n    }\\n\\n    function getSongFromId(uint id) view public returns (string memory, bool, bool, bytes32[] memory, uint32, uint32) {\\n        require(id < songs.length);\\n\\n        SharedDataStructures.Song memory currSong = songs[id];\\n\\n        return (currSong.name, currSong.isMinted, currSong.isDeleted, currSong.notes, currSong.id, currSong.bpm);\\n    }\\n\\n    function getNumberOfSongs() view public returns (uint32) {\\n        return uint32(songs.length);\\n    }\\n\\n    function _getSongOwner(uint id) view internal returns (address) {\\n        return songToOwner[id];\\n    }\\n\\n    modifier onlySongOwner(uint id) {\\n        require(msg.sender == _getSongOwner(id));\\n        _;\\n    }\\n\\n    function _createSong(string memory _name, uint bpm) internal returns (uint) {\\n        uint32 newId = getNumberOfSongs();\\n        //@notice set limit on number of songs a person can create to prevent bots etc.\\n        require(songOwnerCount[msg.sender] < 50);\\n\\n        songs.push(SharedDataStructures.Song({name: _name, isMinted: false, isDeleted: false, notes: new bytes32[](0), id: newId, bpm: uint32(bpm)}));\\n\\n        songToOwner[newId] = msg.sender;\\n        //@notice we don't need to check if this exists due to Solidity's design of mappings\\n        songOwnerCount[msg.sender]++;\\n\\n        emit NewSongCreated(_name, newId, bpm);\\n\\n        return newId; \\n    }  \\n\\n    //@notice returns the id of the newly created song\\n    function createNewSong(string memory _name, uint bpm) public returns (uint) {\\n        return _createSong(_name, bpm);\\n    }\\n    \\n    //@notice creates a new song like above, but also adds notes to the songs. This is done to optimize gas\\n    //as opposed to calling createSong and then addNotes\\n    function createNewSongWithNotes(string memory _name, uint bpm, bytes32[] memory newNotes) public returns (uint) {\\n        uint id = _createSong(_name, bpm);\\n\\n        SharedDataStructures.Song storage newSong = songs[id];\\n        newSong.notes = newNotes;\\n\\n        return id;\\n    }\\n\\n    function _addNotesToSong(uint id, bytes32[] memory newNotes) internal returns (bytes32[] memory) {\\n        //@notice ensure we're adding to a song that actually exists\\n        require(id < songs.length);\\n        //@notice for now, can only append 50 new notes at a time\\n        require(newNotes.length < 50);\\n\\n        SharedDataStructures.Song storage currentSong = songs[id];\\n\\n        require(!currentSong.isDeleted);\\n        require(!currentSong.isMinted);\\n\\n        for (uint i=0; i < newNotes.length; i++) {\\n            currentSong.notes.push(newNotes[i]);\\n        }\\n\\n        emit SongEdited(currentSong.name, id);\\n\\n        return currentSong.notes;\\n\\n    }\\n\\n    //@notice returns the full new song notes\\n    function addNotes(uint id, bytes32[] memory newNotes) public returns (bytes32[] memory) {\\n        return _addNotesToSong(id, newNotes);\\n    }\\n\\n    function deleteSong(uint id) onlySongOwner(id) public {\\n        require(id < songs.length);\\n        require(!songs[id].isDeleted);\\n\\n        songs[id].isDeleted = true;\\n        //@notice we delete the most expensive part of storing a song and bpm\\n        //which will no longer be used\\n        delete songs[id].notes;\\n        delete songs[id].bpm;\\n\\n        emit SongDeleted(songs[id].name, id);\\n    }\\n\\n    function mintSong(uint id) public {\\n        require(id < songs.length);\\n        require(!songs[id].isDeleted);\\n\\n        songs[id].isMinted = true;\\n\\n        emit SongMinted(songs[id].name, id);\\n\\n    }\\n\\n}\",\"keccak256\":\"0x22843bbbfc436a6cef8142cd0397c920369f6b8af43be0bac96de63dbf38ce88\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611cef806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a8ec42d811610071578063a8ec42d81461017c578063e0eb2d821461019a578063e970a2c4146101b6578063f17b0fd2146101eb578063f9ce14ab1461021b578063fa8ce7831461024b576100a9565b806329921f3d146100ae57806329ef6862146100de578063304cff30146100fc578063408dd3181461013057806366fa94391461014c575b600080fd5b6100c860048036038101906100c39190611092565b61027b565b6040516100d59190611100565b60405180910390f35b6100e66102ae565b6040516100f39190611408565b60405180910390f35b61011660048036038101906101119190611092565b610479565b604051610127959493929190611492565b60405180910390f35b61014a60048036038101906101459190611092565b610581565b005b61016660048036038101906101619190611660565b61066d565b604051610173919061172b565b60405180910390f35b610184610681565b604051610191919061174d565b60405180910390f35b6101b460048036038101906101af9190611092565b61068d565b005b6101d060048036038101906101cb9190611092565b610824565b6040516101e296959493929190611768565b60405180910390f35b6102056004803603810190610200919061188c565b610a0f565b6040516102129190611926565b60405180910390f35b6102356004803603810190610230919061196d565b610a68565b60405161024291906119b3565b60405180910390f35b610265600480360381019061026091906119ce565b610a80565b6040516102729190611926565b60405180910390f35b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561047057838290600052602060002090600402016040518060c001604052908160008201805461030590611a59565b80601f016020809104026020016040519081016040528092919081815260200182805461033190611a59565b801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff161515151581526020016002820180548060200260200160405190810160405280929190818152602001828054801561040c57602002820191906000526020600020905b8154815260200190600101908083116103f8575b505050505081526020016003820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016003820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050815260200190600101906102d2565b50505050905090565b6000818154811061048957600080fd5b90600052602060002090600402016000915090508060000180546104ac90611a59565b80601f01602080910402602001604051908101604052809291908181526020018280546104d890611a59565b80156105255780601f106104fa57610100808354040283529160200191610525565b820191906000526020600020905b81548152906001019060200180831161050857829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060030160009054906101000a900463ffffffff16908060030160049054906101000a900463ffffffff16905085565b600080549050811061059257600080fd5b600081815481106105a6576105a5611a8b565b5b906000526020600020906004020160010160019054906101000a900460ff16156105cf57600080fd5b6001600082815481106105e5576105e4611a8b565b5b906000526020600020906004020160010160006101000a81548160ff0219169083151502179055507fc778ab168cf50ad9990325dab79ac53c265f46e968c7e7e9a656917ddcd214f86000828154811061064257610641611a8b565b5b906000526020600020906004020160000182604051610662929190611b4f565b60405180910390a150565b60606106798383610a94565b905092915050565b60008080549050905090565b8061069781610c0f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ce57600080fd5b60008054905082106106df57600080fd5b600082815481106106f3576106f2611a8b565b5b906000526020600020906004020160010160019054906101000a900460ff161561071c57600080fd5b60016000838154811061073257610731611a8b565b5b906000526020600020906004020160010160016101000a81548160ff0219169083151502179055506000828154811061076e5761076d611a8b565b5b9060005260206000209060040201600201600061078b9190610f1a565b6000828154811061079f5761079e611a8b565b5b906000526020600020906004020160030160046101000a81549063ffffffff02191690557f183bbdfff8def210a436cb315786c936109b5fb4c0b5c21350a735183fce41f1600083815481106107f8576107f7611a8b565b5b906000526020600020906004020160000183604051610818929190611b4f565b60405180910390a15050565b60606000806060600080600080549050871061083f57600080fd5b600080888154811061085457610853611a8b565b5b90600052602060002090600402016040518060c001604052908160008201805461087d90611a59565b80601f01602080910402602001604051908101604052809291908181526020018280546108a990611a59565b80156108f65780601f106108cb576101008083540402835291602001916108f6565b820191906000526020600020905b8154815290600101906020018083116108d957829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff161515151581526020016002820180548060200260200160405190810160405280929190818152602001828054801561098457602002820191906000526020600020905b815481526020019060010190808311610970575b505050505081526020016003820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016003820160049054906101000a900463ffffffff1663ffffffff1663ffffffff16815250509050806000015181602001518260400151836060015184608001518560a001519650965096509650965096505091939550919395565b600080610a1c8585610c4c565b90506000808281548110610a3357610a32611a8b565b5b9060005260206000209060040201905083816002019080519060200190610a5b929190610f3b565b5081925050509392505050565b60026020528060005260406000206000915090505481565b6000610a8c8383610c4c565b905092915050565b60606000805490508310610aa757600080fd5b6032825110610ab557600080fd5b6000808481548110610aca57610ac9611a8b565b5b906000526020600020906004020190508060010160019054906101000a900460ff1615610af657600080fd5b8060010160009054906101000a900460ff1615610b1257600080fd5b60005b8351811015610b765781600201848281518110610b3557610b34611a8b565b5b602002602001015190806001815401808255809150506001900390600052602060002001600090919091909150558080610b6e90611bae565b915050610b15565b507f658fe9d65ce0430feac5385a825e9ccebc9b0cf9e422d97acbca097ee8aa27098160000185604051610bab929190611b4f565b60405180910390a180600201805480602002602001604051908101604052809291908181526020018280548015610c0157602002820191906000526020600020905b815481526020019060010190808311610bed575b505050505091505092915050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610c57610681565b90506032600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205412610ca557600080fd5b60006040518060c00160405280868152602001600015158152602001600015158152602001600067ffffffffffffffff811115610ce557610ce46114f1565b5b604051908082528060200260200182016040528015610d135781602001602082028036833780820191505090505b5081526020018363ffffffff1681526020018563ffffffff1681525090806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000019080519060200190610d74929190610f88565b5060208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff0219169083151502179055506060820151816002019080519060200190610dd1929190610f3b565b5060808201518160030160006101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160030160046101000a81548163ffffffff021916908363ffffffff160217905550505033600160008363ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610eca90611bf7565b91905055507f703bc72923f32c87b82929cc095acb284b614c7b0d9691d2709ee77430fcacf0848285604051610f0293929190611c7b565b60405180910390a18063ffffffff1691505092915050565b5080546000825590600052602060002090810190610f38919061100e565b50565b828054828255906000526020600020908101928215610f77579160200282015b82811115610f76578251825591602001919060010190610f5b565b5b509050610f84919061100e565b5090565b828054610f9490611a59565b90600052602060002090601f016020900481019282610fb65760008555610ffd565b82601f10610fcf57805160ff1916838001178555610ffd565b82800160010185558215610ffd579182015b82811115610ffc578251825591602001919060010190610fe1565b5b50905061100a919061102b565b5090565b5b8082111561102757600081600090555060010161100f565b5090565b5b8082111561104457600081600090555060010161102c565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61106f8161105c565b811461107a57600080fd5b50565b60008135905061108c81611066565b92915050565b6000602082840312156110a8576110a7611052565b5b60006110b68482850161107d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110ea826110bf565b9050919050565b6110fa816110df565b82525050565b600060208201905061111560008301846110f1565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611181578082015181840152602081019050611166565b83811115611190576000848401525b50505050565b6000601f19601f8301169050919050565b60006111b282611147565b6111bc8185611152565b93506111cc818560208601611163565b6111d581611196565b840191505092915050565b60008115159050919050565b6111f5816111e0565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61123a81611227565b82525050565b600061124c8383611231565b60208301905092915050565b6000602082019050919050565b6000611270826111fb565b61127a8185611206565b935061128583611217565b8060005b838110156112b657815161129d8882611240565b97506112a883611258565b925050600181019050611289565b5085935050505092915050565b600063ffffffff82169050919050565b6112dc816112c3565b82525050565b600060c08301600083015184820360008601526112ff82826111a7565b915050602083015161131460208601826111ec565b50604083015161132760408601826111ec565b506060830151848203606086015261133f8282611265565b915050608083015161135460808601826112d3565b5060a083015161136760a08601826112d3565b508091505092915050565b600061137e83836112e2565b905092915050565b6000602082019050919050565b600061139e8261111b565b6113a88185611126565b9350836020820285016113ba85611137565b8060005b858110156113f657848403895281516113d78582611372565b94506113e283611386565b925060208a019950506001810190506113be565b50829750879550505050505092915050565b600060208201905081810360008301526114228184611393565b905092915050565b600082825260208201905092915050565b600061144682611147565b611450818561142a565b9350611460818560208601611163565b61146981611196565b840191505092915050565b61147d816111e0565b82525050565b61148c816112c3565b82525050565b600060a08201905081810360008301526114ac818861143b565b90506114bb6020830187611474565b6114c86040830186611474565b6114d56060830185611483565b6114e26080830184611483565b9695505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61152982611196565b810181811067ffffffffffffffff82111715611548576115476114f1565b5b80604052505050565b600061155b611048565b90506115678282611520565b919050565b600067ffffffffffffffff821115611587576115866114f1565b5b602082029050602081019050919050565b600080fd5b6115a681611227565b81146115b157600080fd5b50565b6000813590506115c38161159d565b92915050565b60006115dc6115d78461156c565b611551565b905080838252602082019050602084028301858111156115ff576115fe611598565b5b835b81811015611628578061161488826115b4565b845260208401935050602081019050611601565b5050509392505050565b600082601f830112611647576116466114ec565b5b81356116578482602086016115c9565b91505092915050565b6000806040838503121561167757611676611052565b5b60006116858582860161107d565b925050602083013567ffffffffffffffff8111156116a6576116a5611057565b5b6116b285828601611632565b9150509250929050565b600082825260208201905092915050565b60006116d8826111fb565b6116e281856116bc565b93506116ed83611217565b8060005b8381101561171e5781516117058882611240565b975061171083611258565b9250506001810190506116f1565b5085935050505092915050565b6000602082019050818103600083015261174581846116cd565b905092915050565b60006020820190506117626000830184611483565b92915050565b600060c0820190508181036000830152611782818961143b565b90506117916020830188611474565b61179e6040830187611474565b81810360608301526117b081866116cd565b90506117bf6080830185611483565b6117cc60a0830184611483565b979650505050505050565b600080fd5b600067ffffffffffffffff8211156117f7576117f66114f1565b5b61180082611196565b9050602081019050919050565b82818337600083830152505050565b600061182f61182a846117dc565b611551565b90508281526020810184848401111561184b5761184a6117d7565b5b61185684828561180d565b509392505050565b600082601f830112611873576118726114ec565b5b813561188384826020860161181c565b91505092915050565b6000806000606084860312156118a5576118a4611052565b5b600084013567ffffffffffffffff8111156118c3576118c2611057565b5b6118cf8682870161185e565b93505060206118e08682870161107d565b925050604084013567ffffffffffffffff81111561190157611900611057565b5b61190d86828701611632565b9150509250925092565b6119208161105c565b82525050565b600060208201905061193b6000830184611917565b92915050565b61194a816110df565b811461195557600080fd5b50565b60008135905061196781611941565b92915050565b60006020828403121561198357611982611052565b5b600061199184828501611958565b91505092915050565b6000819050919050565b6119ad8161199a565b82525050565b60006020820190506119c860008301846119a4565b92915050565b600080604083850312156119e5576119e4611052565b5b600083013567ffffffffffffffff811115611a0357611a02611057565b5b611a0f8582860161185e565b9250506020611a208582860161107d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a7157607f821691505b60208210811415611a8557611a84611a2a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b60008154611adc81611a59565b611ae6818661142a565b94506001821660008114611b015760018114611b1357611b46565b60ff1983168652602086019350611b46565b611b1c85611aba565b60005b83811015611b3e57815481890152600182019150602081019050611b1f565b808801955050505b50505092915050565b60006040820190508181036000830152611b698185611acf565b9050611b786020830184611917565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bb98261105c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611bec57611beb611b7f565b5b600182019050919050565b6000611c028261199a565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c3557611c34611b7f565b5b600182019050919050565b6000819050919050565b6000611c65611c60611c5b846112c3565b611c40565b61105c565b9050919050565b611c7581611c4a565b82525050565b60006060820190508181036000830152611c95818661143b565b9050611ca46020830185611c6c565b611cb16040830184611917565b94935050505056fea2646970667358221220382480979b3fbcd65f7238d1206da8bb753418c94acd7b1ffdf79b19d75a33af64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a8ec42d811610071578063a8ec42d81461017c578063e0eb2d821461019a578063e970a2c4146101b6578063f17b0fd2146101eb578063f9ce14ab1461021b578063fa8ce7831461024b576100a9565b806329921f3d146100ae57806329ef6862146100de578063304cff30146100fc578063408dd3181461013057806366fa94391461014c575b600080fd5b6100c860048036038101906100c39190611092565b61027b565b6040516100d59190611100565b60405180910390f35b6100e66102ae565b6040516100f39190611408565b60405180910390f35b61011660048036038101906101119190611092565b610479565b604051610127959493929190611492565b60405180910390f35b61014a60048036038101906101459190611092565b610581565b005b61016660048036038101906101619190611660565b61066d565b604051610173919061172b565b60405180910390f35b610184610681565b604051610191919061174d565b60405180910390f35b6101b460048036038101906101af9190611092565b61068d565b005b6101d060048036038101906101cb9190611092565b610824565b6040516101e296959493929190611768565b60405180910390f35b6102056004803603810190610200919061188c565b610a0f565b6040516102129190611926565b60405180910390f35b6102356004803603810190610230919061196d565b610a68565b60405161024291906119b3565b60405180910390f35b610265600480360381019061026091906119ce565b610a80565b6040516102729190611926565b60405180910390f35b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561047057838290600052602060002090600402016040518060c001604052908160008201805461030590611a59565b80601f016020809104026020016040519081016040528092919081815260200182805461033190611a59565b801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff161515151581526020016002820180548060200260200160405190810160405280929190818152602001828054801561040c57602002820191906000526020600020905b8154815260200190600101908083116103f8575b505050505081526020016003820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016003820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050815260200190600101906102d2565b50505050905090565b6000818154811061048957600080fd5b90600052602060002090600402016000915090508060000180546104ac90611a59565b80601f01602080910402602001604051908101604052809291908181526020018280546104d890611a59565b80156105255780601f106104fa57610100808354040283529160200191610525565b820191906000526020600020905b81548152906001019060200180831161050857829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060030160009054906101000a900463ffffffff16908060030160049054906101000a900463ffffffff16905085565b600080549050811061059257600080fd5b600081815481106105a6576105a5611a8b565b5b906000526020600020906004020160010160019054906101000a900460ff16156105cf57600080fd5b6001600082815481106105e5576105e4611a8b565b5b906000526020600020906004020160010160006101000a81548160ff0219169083151502179055507fc778ab168cf50ad9990325dab79ac53c265f46e968c7e7e9a656917ddcd214f86000828154811061064257610641611a8b565b5b906000526020600020906004020160000182604051610662929190611b4f565b60405180910390a150565b60606106798383610a94565b905092915050565b60008080549050905090565b8061069781610c0f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ce57600080fd5b60008054905082106106df57600080fd5b600082815481106106f3576106f2611a8b565b5b906000526020600020906004020160010160019054906101000a900460ff161561071c57600080fd5b60016000838154811061073257610731611a8b565b5b906000526020600020906004020160010160016101000a81548160ff0219169083151502179055506000828154811061076e5761076d611a8b565b5b9060005260206000209060040201600201600061078b9190610f1a565b6000828154811061079f5761079e611a8b565b5b906000526020600020906004020160030160046101000a81549063ffffffff02191690557f183bbdfff8def210a436cb315786c936109b5fb4c0b5c21350a735183fce41f1600083815481106107f8576107f7611a8b565b5b906000526020600020906004020160000183604051610818929190611b4f565b60405180910390a15050565b60606000806060600080600080549050871061083f57600080fd5b600080888154811061085457610853611a8b565b5b90600052602060002090600402016040518060c001604052908160008201805461087d90611a59565b80601f01602080910402602001604051908101604052809291908181526020018280546108a990611a59565b80156108f65780601f106108cb576101008083540402835291602001916108f6565b820191906000526020600020905b8154815290600101906020018083116108d957829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff161515151581526020016002820180548060200260200160405190810160405280929190818152602001828054801561098457602002820191906000526020600020905b815481526020019060010190808311610970575b505050505081526020016003820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016003820160049054906101000a900463ffffffff1663ffffffff1663ffffffff16815250509050806000015181602001518260400151836060015184608001518560a001519650965096509650965096505091939550919395565b600080610a1c8585610c4c565b90506000808281548110610a3357610a32611a8b565b5b9060005260206000209060040201905083816002019080519060200190610a5b929190610f3b565b5081925050509392505050565b60026020528060005260406000206000915090505481565b6000610a8c8383610c4c565b905092915050565b60606000805490508310610aa757600080fd5b6032825110610ab557600080fd5b6000808481548110610aca57610ac9611a8b565b5b906000526020600020906004020190508060010160019054906101000a900460ff1615610af657600080fd5b8060010160009054906101000a900460ff1615610b1257600080fd5b60005b8351811015610b765781600201848281518110610b3557610b34611a8b565b5b602002602001015190806001815401808255809150506001900390600052602060002001600090919091909150558080610b6e90611bae565b915050610b15565b507f658fe9d65ce0430feac5385a825e9ccebc9b0cf9e422d97acbca097ee8aa27098160000185604051610bab929190611b4f565b60405180910390a180600201805480602002602001604051908101604052809291908181526020018280548015610c0157602002820191906000526020600020905b815481526020019060010190808311610bed575b505050505091505092915050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610c57610681565b90506032600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205412610ca557600080fd5b60006040518060c00160405280868152602001600015158152602001600015158152602001600067ffffffffffffffff811115610ce557610ce46114f1565b5b604051908082528060200260200182016040528015610d135781602001602082028036833780820191505090505b5081526020018363ffffffff1681526020018563ffffffff1681525090806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000019080519060200190610d74929190610f88565b5060208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff0219169083151502179055506060820151816002019080519060200190610dd1929190610f3b565b5060808201518160030160006101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160030160046101000a81548163ffffffff021916908363ffffffff160217905550505033600160008363ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610eca90611bf7565b91905055507f703bc72923f32c87b82929cc095acb284b614c7b0d9691d2709ee77430fcacf0848285604051610f0293929190611c7b565b60405180910390a18063ffffffff1691505092915050565b5080546000825590600052602060002090810190610f38919061100e565b50565b828054828255906000526020600020908101928215610f77579160200282015b82811115610f76578251825591602001919060010190610f5b565b5b509050610f84919061100e565b5090565b828054610f9490611a59565b90600052602060002090601f016020900481019282610fb65760008555610ffd565b82601f10610fcf57805160ff1916838001178555610ffd565b82800160010185558215610ffd579182015b82811115610ffc578251825591602001919060010190610fe1565b5b50905061100a919061102b565b5090565b5b8082111561102757600081600090555060010161100f565b5090565b5b8082111561104457600081600090555060010161102c565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61106f8161105c565b811461107a57600080fd5b50565b60008135905061108c81611066565b92915050565b6000602082840312156110a8576110a7611052565b5b60006110b68482850161107d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110ea826110bf565b9050919050565b6110fa816110df565b82525050565b600060208201905061111560008301846110f1565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611181578082015181840152602081019050611166565b83811115611190576000848401525b50505050565b6000601f19601f8301169050919050565b60006111b282611147565b6111bc8185611152565b93506111cc818560208601611163565b6111d581611196565b840191505092915050565b60008115159050919050565b6111f5816111e0565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61123a81611227565b82525050565b600061124c8383611231565b60208301905092915050565b6000602082019050919050565b6000611270826111fb565b61127a8185611206565b935061128583611217565b8060005b838110156112b657815161129d8882611240565b97506112a883611258565b925050600181019050611289565b5085935050505092915050565b600063ffffffff82169050919050565b6112dc816112c3565b82525050565b600060c08301600083015184820360008601526112ff82826111a7565b915050602083015161131460208601826111ec565b50604083015161132760408601826111ec565b506060830151848203606086015261133f8282611265565b915050608083015161135460808601826112d3565b5060a083015161136760a08601826112d3565b508091505092915050565b600061137e83836112e2565b905092915050565b6000602082019050919050565b600061139e8261111b565b6113a88185611126565b9350836020820285016113ba85611137565b8060005b858110156113f657848403895281516113d78582611372565b94506113e283611386565b925060208a019950506001810190506113be565b50829750879550505050505092915050565b600060208201905081810360008301526114228184611393565b905092915050565b600082825260208201905092915050565b600061144682611147565b611450818561142a565b9350611460818560208601611163565b61146981611196565b840191505092915050565b61147d816111e0565b82525050565b61148c816112c3565b82525050565b600060a08201905081810360008301526114ac818861143b565b90506114bb6020830187611474565b6114c86040830186611474565b6114d56060830185611483565b6114e26080830184611483565b9695505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61152982611196565b810181811067ffffffffffffffff82111715611548576115476114f1565b5b80604052505050565b600061155b611048565b90506115678282611520565b919050565b600067ffffffffffffffff821115611587576115866114f1565b5b602082029050602081019050919050565b600080fd5b6115a681611227565b81146115b157600080fd5b50565b6000813590506115c38161159d565b92915050565b60006115dc6115d78461156c565b611551565b905080838252602082019050602084028301858111156115ff576115fe611598565b5b835b81811015611628578061161488826115b4565b845260208401935050602081019050611601565b5050509392505050565b600082601f830112611647576116466114ec565b5b81356116578482602086016115c9565b91505092915050565b6000806040838503121561167757611676611052565b5b60006116858582860161107d565b925050602083013567ffffffffffffffff8111156116a6576116a5611057565b5b6116b285828601611632565b9150509250929050565b600082825260208201905092915050565b60006116d8826111fb565b6116e281856116bc565b93506116ed83611217565b8060005b8381101561171e5781516117058882611240565b975061171083611258565b9250506001810190506116f1565b5085935050505092915050565b6000602082019050818103600083015261174581846116cd565b905092915050565b60006020820190506117626000830184611483565b92915050565b600060c0820190508181036000830152611782818961143b565b90506117916020830188611474565b61179e6040830187611474565b81810360608301526117b081866116cd565b90506117bf6080830185611483565b6117cc60a0830184611483565b979650505050505050565b600080fd5b600067ffffffffffffffff8211156117f7576117f66114f1565b5b61180082611196565b9050602081019050919050565b82818337600083830152505050565b600061182f61182a846117dc565b611551565b90508281526020810184848401111561184b5761184a6117d7565b5b61185684828561180d565b509392505050565b600082601f830112611873576118726114ec565b5b813561188384826020860161181c565b91505092915050565b6000806000606084860312156118a5576118a4611052565b5b600084013567ffffffffffffffff8111156118c3576118c2611057565b5b6118cf8682870161185e565b93505060206118e08682870161107d565b925050604084013567ffffffffffffffff81111561190157611900611057565b5b61190d86828701611632565b9150509250925092565b6119208161105c565b82525050565b600060208201905061193b6000830184611917565b92915050565b61194a816110df565b811461195557600080fd5b50565b60008135905061196781611941565b92915050565b60006020828403121561198357611982611052565b5b600061199184828501611958565b91505092915050565b6000819050919050565b6119ad8161199a565b82525050565b60006020820190506119c860008301846119a4565b92915050565b600080604083850312156119e5576119e4611052565b5b600083013567ffffffffffffffff811115611a0357611a02611057565b5b611a0f8582860161185e565b9250506020611a208582860161107d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a7157607f821691505b60208210811415611a8557611a84611a2a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b60008154611adc81611a59565b611ae6818661142a565b94506001821660008114611b015760018114611b1357611b46565b60ff1983168652602086019350611b46565b611b1c85611aba565b60005b83811015611b3e57815481890152600182019150602081019050611b1f565b808801955050505b50505092915050565b60006040820190508181036000830152611b698185611acf565b9050611b786020830184611917565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bb98261105c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611bec57611beb611b7f565b5b600182019050919050565b6000611c028261199a565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c3557611c34611b7f565b5b600182019050919050565b6000819050919050565b6000611c65611c60611c5b846112c3565b611c40565b61105c565b9050919050565b611c7581611c4a565b82525050565b60006060820190508181036000830152611c95818661143b565b9050611ca46020830185611c6c565b611cb16040830184611917565b94935050505056fea2646970667358221220382480979b3fbcd65f7238d1206da8bb753418c94acd7b1ffdf79b19d75a33af64736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23,
        "contract": "contracts/SongStorage.sol:SongStorage",
        "label": "songs",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Song)15_storage)dyn_storage"
      },
      {
        "astId": 27,
        "contract": "contracts/SongStorage.sol:SongStorage",
        "label": "songToOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 31,
        "contract": "contracts/SongStorage.sol:SongStorage",
        "label": "songOwnerCount",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_int256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Song)15_storage)dyn_storage": {
        "base": "t_struct(Song)15_storage",
        "encoding": "dynamic_array",
        "label": "struct SharedDataStructures.Song[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_int256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => int256)",
        "numberOfBytes": "32",
        "value": "t_int256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Song)15_storage": {
        "encoding": "inplace",
        "label": "struct SharedDataStructures.Song",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "isMinted",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 7,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "isDeleted",
            "offset": 1,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 10,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "notes",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 12,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "id",
            "offset": 0,
            "slot": "3",
            "type": "t_uint32"
          },
          {
            "astId": 14,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "bpm",
            "offset": 4,
            "slot": "3",
            "type": "t_uint32"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}